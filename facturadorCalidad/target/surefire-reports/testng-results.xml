<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="119" passed="119" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-16T01:52:19 BOT" name="Command line suite" finished-at="2020-11-16T01:52:44 BOT" duration-ms="24870">
    <groups>
    </groups>
    <test started-at="2020-11-16T01:52:19 BOT" name="Command line test" finished-at="2020-11-16T01:52:44 BOT" duration-ms="24870">
      <class name="entidadesTest.PlanWowTest">
        <test-method is-config="true" signature="init()[pri:0, instance:entidadesTest.PlanWowTest@14fa92af]" started-at="2020-11-16T01:52:37 BOT" name="init" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="init()[pri:0, instance:entidadesTest.PlanWowTest@14fa92af]" started-at="2020-11-16T01:52:37 BOT" name="init" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="calculatePriceExternalNumber()[pri:0, instance:entidadesTest.PlanWowTest@14fa92af]" started-at="2020-11-16T01:52:37 BOT" name="calculatePriceExternalNumber" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calculatePriceExternalNumber -->
        <test-method signature="calculatePriceCallBelongsToFriends()[pri:0, instance:entidadesTest.PlanWowTest@14fa92af]" started-at="2020-11-16T01:52:37 BOT" name="calculatePriceCallBelongsToFriends" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calculatePriceCallBelongsToFriends -->
      </class> <!-- entidadesTest.PlanWowTest -->
      <class name="repositoriosTest.PersistenciaArchivosTest">
        <test-method signature="deserializarTodosLosArchivosTest()[pri:0, instance:repositoriosTest.PersistenciaArchivosTest@360bc645]" started-at="2020-11-16T01:52:37 BOT" name="deserializarTodosLosArchivosTest" finished-at="2020-11-16T01:52:40 BOT" duration-ms="3013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deserializarTodosLosArchivosTest -->
        <test-method is-config="true" signature="initSerializarArchivos()[pri:0, instance:repositoriosTest.PersistenciaArchivosTest@360bc645]" started-at="2020-11-16T01:52:37 BOT" name="initSerializarArchivos" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSerializarArchivos -->
        <test-method is-config="true" signature="initDeserializarTodosLosArchivos()[pri:0, instance:repositoriosTest.PersistenciaArchivosTest@360bc645]" started-at="2020-11-16T01:52:37 BOT" name="initDeserializarTodosLosArchivos" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDeserializarTodosLosArchivos -->
        <test-method is-config="true" signature="initSerializarArchivos()[pri:0, instance:repositoriosTest.PersistenciaArchivosTest@360bc645]" started-at="2020-11-16T01:52:40 BOT" name="initSerializarArchivos" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSerializarArchivos -->
        <test-method is-config="true" signature="initDeserializarTodosLosArchivos()[pri:0, instance:repositoriosTest.PersistenciaArchivosTest@360bc645]" started-at="2020-11-16T01:52:40 BOT" name="initDeserializarTodosLosArchivos" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDeserializarTodosLosArchivos -->
        <test-method signature="serializarTest()[pri:0, instance:repositoriosTest.PersistenciaArchivosTest@360bc645]" started-at="2020-11-16T01:52:40 BOT" name="serializarTest" finished-at="2020-11-16T01:52:40 BOT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serializarTest -->
      </class> <!-- repositoriosTest.PersistenciaArchivosTest -->
      <class name="repositoriosTest.RepositorioClientesTest">
        <test-method is-config="true" signature="initRegistro()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:42 BOT" name="initRegistro" finished-at="2020-11-16T01:52:42 BOT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistro -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNormal()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:42 BOT" name="initRegistrarNuevoClientePlanNormal" finished-at="2020-11-16T01:52:42 BOT" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNormal -->
        <test-method signature="buscarClienteTest()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:42 BOT" name="buscarClienteTest" finished-at="2020-11-16T01:52:42 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buscarClienteTest -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNumerosAmigos()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:42 BOT" name="initRegistrarNuevoClientePlanNumerosAmigos" finished-at="2020-11-16T01:52:42 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNumerosAmigos -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNormal()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:42 BOT" name="initRegistrarNuevoClientePlanNormal" finished-at="2020-11-16T01:52:42 BOT" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNormal -->
        <test-method signature="registrarClienteAmigosEnDBTest()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:42 BOT" name="registrarClienteAmigosEnDBTest" finished-at="2020-11-16T01:52:43 BOT" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrarClienteAmigosEnDBTest -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNumerosAmigos()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:42 BOT" name="initRegistrarNuevoClientePlanNumerosAmigos" finished-at="2020-11-16T01:52:42 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNumerosAmigos -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNormal()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:43 BOT" name="initRegistrarNuevoClientePlanNormal" finished-at="2020-11-16T01:52:43 BOT" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNormal -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNumerosAmigos()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:43 BOT" name="initRegistrarNuevoClientePlanNumerosAmigos" finished-at="2020-11-16T01:52:43 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNumerosAmigos -->
        <test-method signature="registrarClienteNormalEnDBTest()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:43 BOT" name="registrarClienteNormalEnDBTest" finished-at="2020-11-16T01:52:43 BOT" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrarClienteNormalEnDBTest -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNormal()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:43 BOT" name="initRegistrarNuevoClientePlanNormal" finished-at="2020-11-16T01:52:43 BOT" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNormal -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNumerosAmigos()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:43 BOT" name="initRegistrarNuevoClientePlanNumerosAmigos" finished-at="2020-11-16T01:52:43 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNumerosAmigos -->
        <test-method signature="registrarNuevoClientePlanNormalTest()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:43 BOT" name="registrarNuevoClientePlanNormalTest" finished-at="2020-11-16T01:52:43 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrarNuevoClientePlanNormalTest -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNormal()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:43 BOT" name="initRegistrarNuevoClientePlanNormal" finished-at="2020-11-16T01:52:44 BOT" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNormal -->
        <test-method is-config="true" signature="initRegistrarNuevoClientePlanNumerosAmigos()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:44 BOT" name="initRegistrarNuevoClientePlanNumerosAmigos" finished-at="2020-11-16T01:52:44 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrarNuevoClientePlanNumerosAmigos -->
        <test-method signature="registrarNuevoClientePlanNumerosAmigos()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:44 BOT" name="registrarNuevoClientePlanNumerosAmigos" finished-at="2020-11-16T01:52:44 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrarNuevoClientePlanNumerosAmigos -->
        <test-method is-config="true" signature="borrarRegistrosClientes()[pri:0, instance:repositoriosTest.RepositorioClientesTest@1894e40d]" started-at="2020-11-16T01:52:44 BOT" name="borrarRegistrosClientes" finished-at="2020-11-16T01:52:44 BOT" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- borrarRegistrosClientes -->
      </class> <!-- repositoriosTest.RepositorioClientesTest -->
      <class name="controladoresTest.ControladorCargaCDRsTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:controladoresTest.ControladorCargaCDRsTest@59ed3e6c]" started-at="2020-11-16T01:52:29 BOT" name="beforeClass" finished-at="2020-11-16T01:52:29 BOT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getRegistrosCargados()[pri:0, instance:controladoresTest.ControladorCargaCDRsTest@59ed3e6c]" started-at="2020-11-16T01:52:29 BOT" name="getRegistrosCargados" finished-at="2020-11-16T01:52:30 BOT" duration-ms="884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRegistrosCargados -->
        <test-method signature="postApiSubmit()[pri:0, instance:controladoresTest.ControladorCargaCDRsTest@59ed3e6c]" started-at="2020-11-16T01:52:30 BOT" name="postApiSubmit" finished-at="2020-11-16T01:52:31 BOT" duration-ms="531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postApiSubmit -->
        <test-method signature="postApiSubmitSinArchivo()[pri:0, instance:controladoresTest.ControladorCargaCDRsTest@59ed3e6c]" started-at="2020-11-16T01:52:31 BOT" name="postApiSubmitSinArchivo" finished-at="2020-11-16T01:52:31 BOT" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postApiSubmitSinArchivo -->
      </class> <!-- controladoresTest.ControladorCargaCDRsTest -->
      <class name="casosDeUsoTest.ObtenerMontoTarifaTest">
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method signature="noEstaEnHorarioReducido()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="noEstaEnHorarioReducido" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noEstaEnHorarioReducido -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method signature="noEstaEnHorarioSuperReducido()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="noEstaEnHorarioSuperReducido" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noEstaEnHorarioSuperReducido -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="obtenerMontoTarifaPlanNoRegistrado()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="obtenerMontoTarifaPlanNoRegistrado" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerMontoTarifaPlanNoRegistrado -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method signature="obtenerMontoTarifaPostpago()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="obtenerMontoTarifaPostpago" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerMontoTarifaPostpago -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method signature="obtenerMontoTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="obtenerMontoTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerMontoTarifaPrepagoNormal -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="obtenerMontoTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="obtenerMontoTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerMontoTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method signature="obtenerMontoTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="obtenerMontoTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerMontoTarifaPrepagoSuperReducida -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="init" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initTarifaPrepagoReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoSuperReducida()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoSuperReducida" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoSuperReducida -->
        <test-method is-config="true" signature="initTarifaPrepagoNormal()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="initTarifaPrepagoNormal" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarifaPrepagoNormal -->
        <test-method signature="obtenerMontoTarifaWow()[pri:0, instance:casosDeUsoTest.ObtenerMontoTarifaTest@6c931d35]" started-at="2020-11-16T01:52:19 BOT" name="obtenerMontoTarifaWow" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerMontoTarifaWow -->
      </class> <!-- casosDeUsoTest.ObtenerMontoTarifaTest -->
      <class name="repositoriosTest.FactoriaPlanTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getPlanNull()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="getPlanNull" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlanNull -->
        <test-method signature="getPlanPostpago()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="getPlanPostpago" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlanPostpago -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getPlanNull2()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="getPlanNull2" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlanNull2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getPlanPrepago()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="getPlanPrepago" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlanPrepago -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getPlanWOW()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="getPlanWOW" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlanWOW -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.FactoriaPlanTest@720bf653]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- repositoriosTest.FactoriaPlanTest -->
      <class name="controladoresTest.ControladorCDRBDTest">
        <test-method is-config="true" signature="initControlador()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:31 BOT" name="initControlador" finished-at="2020-11-16T01:52:31 BOT" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initControlador -->
        <test-method is-config="true" signature="initGuardarRegistrosEnBD()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:31 BOT" name="initGuardarRegistrosEnBD" finished-at="2020-11-16T01:52:31 BOT" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initGuardarRegistrosEnBD -->
        <test-method signature="cdrGuardadoBDTest()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:31 BOT" name="cdrGuardadoBDTest" finished-at="2020-11-16T01:52:31 BOT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cdrGuardadoBDTest -->
        <test-method is-config="true" signature="initGuardarRegistrosEnBD()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:31 BOT" name="initGuardarRegistrosEnBD" finished-at="2020-11-16T01:52:32 BOT" duration-ms="447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initGuardarRegistrosEnBD -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:31 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:31 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method signature="filtroPorFechaTest()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:32 BOT" name="filtroPorFechaTest" finished-at="2020-11-16T01:52:32 BOT" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filtroPorFechaTest -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:32 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:32 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:controladoresTest.ControladorCDRBDTest@7cd4a4d7]" started-at="2020-11-16T01:52:32 BOT" name="endTest" finished-at="2020-11-16T01:52:32 BOT" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- controladoresTest.ControladorCDRBDTest -->
      <class name="casosDeUsoTest.PersistenciaVistasTest">
        <test-method is-config="true" signature="initPersistencia()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:22 BOT" name="initPersistencia" finished-at="2020-11-16T01:52:22 BOT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistencia -->
        <test-method is-config="true" signature="initPersistirEnBD()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:22 BOT" name="initPersistirEnBD" finished-at="2020-11-16T01:52:23 BOT" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistirEnBD -->
        <test-method signature="mostrarPersistenciaAmigosEnBD()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:23 BOT" name="mostrarPersistenciaAmigosEnBD" finished-at="2020-11-16T01:52:23 BOT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mostrarPersistenciaAmigosEnBD -->
        <test-method is-config="true" signature="tearBDs()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:23 BOT" name="tearBDs" finished-at="2020-11-16T01:52:23 BOT" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearBDs -->
        <test-method is-config="true" signature="initPersistirEnBD()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:23 BOT" name="initPersistirEnBD" finished-at="2020-11-16T01:52:24 BOT" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistirEnBD -->
        <test-method signature="mostrarPersistenciaCDREnBD()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:24 BOT" name="mostrarPersistenciaCDREnBD" finished-at="2020-11-16T01:52:24 BOT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mostrarPersistenciaCDREnBD -->
        <test-method is-config="true" signature="tearBDs()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:24 BOT" name="tearBDs" finished-at="2020-11-16T01:52:24 BOT" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearBDs -->
        <test-method is-config="true" signature="initPersistirEnBD()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:24 BOT" name="initPersistirEnBD" finished-at="2020-11-16T01:52:25 BOT" duration-ms="895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistirEnBD -->
        <test-method signature="mostrarPersistenciaCDRFiltroMes()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:25 BOT" name="mostrarPersistenciaCDRFiltroMes" finished-at="2020-11-16T01:52:25 BOT" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mostrarPersistenciaCDRFiltroMes -->
        <test-method is-config="true" signature="tearBDs()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:25 BOT" name="tearBDs" finished-at="2020-11-16T01:52:26 BOT" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearBDs -->
        <test-method is-config="true" signature="initPersistirEnBD()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:26 BOT" name="initPersistirEnBD" finished-at="2020-11-16T01:52:26 BOT" duration-ms="930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistirEnBD -->
        <test-method signature="mostrarPersistenciaClienteEnBD()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:26 BOT" name="mostrarPersistenciaClienteEnBD" finished-at="2020-11-16T01:52:27 BOT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mostrarPersistenciaClienteEnBD -->
        <test-method is-config="true" signature="tearBDs()[pri:0, instance:casosDeUsoTest.PersistenciaVistasTest@4beabeec]" started-at="2020-11-16T01:52:27 BOT" name="tearBDs" finished-at="2020-11-16T01:52:27 BOT" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearBDs -->
      </class> <!-- casosDeUsoTest.PersistenciaVistasTest -->
      <class name="entidadesTest.CDRTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="calcularElCostoDeLlamadaTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="calcularElCostoDeLlamadaTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calcularElCostoDeLlamadaTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="asignarCostoYConseguirCostoDeLlamadaTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="asignarCostoYConseguirCostoDeLlamadaTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asignarCostoYConseguirCostoDeLlamadaTest -->
        <test-method signature="conseguirFechaDeLlamadaTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="conseguirFechaDeLlamadaTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirFechaDeLlamadaTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conseguirDuracionDeLlamadaTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="conseguirDuracionDeLlamadaTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirDuracionDeLlamadaTest -->
        <test-method signature="conseguirHoraDeLlamadaTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="conseguirHoraDeLlamadaTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirHoraDeLlamadaTest -->
        <test-method signature="conseguirNumeroDeTelefonoDeOrigenTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="conseguirNumeroDeTelefonoDeOrigenTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirNumeroDeTelefonoDeOrigenTest -->
        <test-method signature="conseguirNumeroDeTelefonoDeDestinoTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="conseguirNumeroDeTelefonoDeDestinoTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirNumeroDeTelefonoDeDestinoTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conversiónDeTiempoDeLlamadaADecimalTest()[pri:0, instance:entidadesTest.CDRTest@4195105b]" started-at="2020-11-16T01:52:37 BOT" name="conversiónDeTiempoDeLlamadaADecimalTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conversiónDeTiempoDeLlamadaADecimalTest -->
      </class> <!-- entidadesTest.CDRTest -->
      <class name="controladoresTest.ControladorClientesTest">
        <test-method is-config="true" signature="initControlador()[pri:0, instance:controladoresTest.ControladorClientesTest@31a3f4de]" started-at="2020-11-16T01:52:34 BOT" name="initControlador" finished-at="2020-11-16T01:52:34 BOT" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initControlador -->
        <test-method signature="getClientes()[pri:0, instance:controladoresTest.ControladorClientesTest@31a3f4de]" started-at="2020-11-16T01:52:34 BOT" name="getClientes" finished-at="2020-11-16T01:52:34 BOT" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getClientes -->
        <test-method signature="recuperarClientesAmigosTest()[pri:0, instance:controladoresTest.ControladorClientesTest@31a3f4de]" started-at="2020-11-16T01:52:34 BOT" name="recuperarClientesAmigosTest" finished-at="2020-11-16T01:52:34 BOT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recuperarClientesAmigosTest -->
        <test-method signature="recuperarClientesTest()[pri:0, instance:controladoresTest.ControladorClientesTest@31a3f4de]" started-at="2020-11-16T01:52:34 BOT" name="recuperarClientesTest" finished-at="2020-11-16T01:52:34 BOT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recuperarClientesTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:controladoresTest.ControladorClientesTest@31a3f4de]" started-at="2020-11-16T01:52:34 BOT" name="endTest" finished-at="2020-11-16T01:52:35 BOT" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- controladoresTest.ControladorClientesTest -->
      <class name="casosDeUsoTest.TarificacionTest">
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="init" finished-at="2020-11-16T01:52:29 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initNoEstaTarificadoPathTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initNoEstaTarificadoPathTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initNoEstaTarificadoPathTest -->
        <test-method signature="CDRNoTarificadoTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="CDRNoTarificadoTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDRNoTarificadoTest -->
        <test-method is-config="true" signature="initTarificacionRegistrosTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initTarificacionRegistrosTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarificacionRegistrosTest -->
        <test-method signature="CDRTarificadoTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="CDRTarificadoTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDRTarificadoTest -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="init" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initNoEstaTarificadoPathTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initNoEstaTarificadoPathTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initNoEstaTarificadoPathTest -->
        <test-method is-config="true" signature="initTarificacionRegistrosTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initTarificacionRegistrosTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarificacionRegistrosTest -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="init" finished-at="2020-11-16T01:52:29 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initNoEstaTarificadoPathTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initNoEstaTarificadoPathTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initNoEstaTarificadoPathTest -->
        <test-method signature="tarificarRegistroTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="tarificarRegistroTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tarificarRegistroTest -->
        <test-method is-config="true" signature="initTarificacionRegistrosTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initTarificacionRegistrosTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarificacionRegistrosTest -->
        <test-method is-config="true" signature="init()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="init" finished-at="2020-11-16T01:52:29 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="initNoEstaTarificadoPathTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initNoEstaTarificadoPathTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initNoEstaTarificadoPathTest -->
        <test-method signature="tarificarRegistrosTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="tarificarRegistrosTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tarificarRegistrosTest -->
        <test-method is-config="true" signature="initTarificacionRegistrosTest()[pri:0, instance:casosDeUsoTest.TarificacionTest@476ee5b3]" started-at="2020-11-16T01:52:29 BOT" name="initTarificacionRegistrosTest" finished-at="2020-11-16T01:52:29 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTarificacionRegistrosTest -->
      </class> <!-- casosDeUsoTest.TarificacionTest -->
      <class name="repositoriosTest.PersistenciaBDClientesTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:40 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="crearTablaClientesYNumerosAmigos()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:40 BOT" name="crearTablaClientesYNumerosAmigos" finished-at="2020-11-16T01:52:40 BOT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- crearTablaClientesYNumerosAmigos -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:40 BOT" name="afterMethod" finished-at="2020-11-16T01:52:40 BOT" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:40 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="mostrarTablaDeClientes()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:40 BOT" name="mostrarTablaDeClientes" finished-at="2020-11-16T01:52:40 BOT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mostrarTablaDeClientes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:40 BOT" name="afterMethod" finished-at="2020-11-16T01:52:41 BOT" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:41 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="mostrarTablaDeNumerosAmigos()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="mostrarTablaDeNumerosAmigos" finished-at="2020-11-16T01:52:41 BOT" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mostrarTablaDeNumerosAmigos -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="afterMethod" finished-at="2020-11-16T01:52:41 BOT" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="poblarTablaDeClientes()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="poblarTablaDeClientes" finished-at="2020-11-16T01:52:41 BOT" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- poblarTablaDeClientes -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:41 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="afterMethod" finished-at="2020-11-16T01:52:41 BOT" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:41 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="poblarTablaDeNumerosDeAmigos()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:41 BOT" name="poblarTablaDeNumerosDeAmigos" finished-at="2020-11-16T01:52:42 BOT" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- poblarTablaDeNumerosDeAmigos -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:repositoriosTest.PersistenciaBDClientesTest@5d51e129]" started-at="2020-11-16T01:52:42 BOT" name="afterMethod" finished-at="2020-11-16T01:52:42 BOT" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- repositoriosTest.PersistenciaBDClientesTest -->
      <class name="repositoriosTest.PersistenciaBDCDRTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="borrarDatos()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="borrarDatos" finished-at="2020-11-16T01:52:40 BOT" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- borrarDatos -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="crearTabla()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="crearTabla" finished-at="2020-11-16T01:52:40 BOT" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- crearTabla -->
        <test-method signature="mostrarTabla()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="mostrarTabla" finished-at="2020-11-16T01:52:40 BOT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mostrarTabla -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:40 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="poblarTabla()[pri:0, instance:repositoriosTest.PersistenciaBDCDRTest@4edef76c]" started-at="2020-11-16T01:52:40 BOT" name="poblarTabla" finished-at="2020-11-16T01:52:40 BOT" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- poblarTabla -->
      </class> <!-- repositoriosTest.PersistenciaBDCDRTest -->
      <class name="casosDeUsoTest.CalculadorCostoLlamadaTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.CalculadorCostoLlamadaTest@6a638c79]" started-at="2020-11-16T01:52:19 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:19 BOT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="asignarCostoYConseguirCostoDeLlamadaCasoCalculosimpleTest()[pri:0, instance:casosDeUsoTest.CalculadorCostoLlamadaTest@6a638c79]" started-at="2020-11-16T01:52:19 BOT" name="asignarCostoYConseguirCostoDeLlamadaCasoCalculosimpleTest" finished-at="2020-11-16T01:52:19 BOT" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asignarCostoYConseguirCostoDeLlamadaCasoCalculosimpleTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.CalculadorCostoLlamadaTest@6a638c79]" started-at="2020-11-16T01:52:19 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="asignarCostoYConseguirCostoDeLlamadaCasoDefaultTest()[pri:0, instance:casosDeUsoTest.CalculadorCostoLlamadaTest@6a638c79]" started-at="2020-11-16T01:52:19 BOT" name="asignarCostoYConseguirCostoDeLlamadaCasoDefaultTest" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asignarCostoYConseguirCostoDeLlamadaCasoDefaultTest -->
      </class> <!-- casosDeUsoTest.CalculadorCostoLlamadaTest -->
      <class name="casosDeUsoTest.RegistroClientesTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:27 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:27 BOT" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="guardarClientesCargados()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:27 BOT" name="guardarClientesCargados" finished-at="2020-11-16T01:52:27 BOT" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guardarClientesCargados -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:27 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:27 BOT" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="guardarTemporalmenteCDRs()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:27 BOT" name="guardarTemporalmenteCDRs" finished-at="2020-11-16T01:52:28 BOT" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guardarTemporalmenteCDRs -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:28 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:28 BOT" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="llenarListaClientes()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:28 BOT" name="llenarListaClientes" finished-at="2020-11-16T01:52:28 BOT" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- llenarListaClientes -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:28 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:28 BOT" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="llenarListaClientesPlanWow()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:28 BOT" name="llenarListaClientesPlanWow" finished-at="2020-11-16T01:52:28 BOT" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- llenarListaClientesPlanWow -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:28 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:28 BOT" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="noCoincidenEnNumeroTelefonico()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:28 BOT" name="noCoincidenEnNumeroTelefonico" finished-at="2020-11-16T01:52:29 BOT" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noCoincidenEnNumeroTelefonico -->
        <test-method is-config="true" signature="borrarRegistrosClientes()[pri:0, instance:casosDeUsoTest.RegistroClientesTest@5b22d8a1]" started-at="2020-11-16T01:52:29 BOT" name="borrarRegistrosClientes" finished-at="2020-11-16T01:52:29 BOT" duration-ms="428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- borrarRegistrosClientes -->
      </class> <!-- casosDeUsoTest.RegistroClientesTest -->
      <class name="entidadesTest.PlanPostpagoTest">
        <test-method signature="calcularCostoDeUnaLlamada()[pri:0, instance:entidadesTest.PlanPostpagoTest@47ffe971]" started-at="2020-11-16T01:52:37 BOT" name="calcularCostoDeUnaLlamada" finished-at="2020-11-16T01:52:37 BOT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calcularCostoDeUnaLlamada -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.PlanPostpagoTest@47ffe971]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.PlanPostpagoTest@47ffe971]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="obtenerTipoDeTarifa()[pri:0, instance:entidadesTest.PlanPostpagoTest@47ffe971]" started-at="2020-11-16T01:52:37 BOT" name="obtenerTipoDeTarifa" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerTipoDeTarifa -->
      </class> <!-- entidadesTest.PlanPostpagoTest -->
      <class name="entidadesTest.PlanPrepagoTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.PlanPrepagoTest@7d04529c]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="calcularCostoDeUnaLlamada()[pri:0, instance:entidadesTest.PlanPrepagoTest@7d04529c]" started-at="2020-11-16T01:52:37 BOT" name="calcularCostoDeUnaLlamada" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calcularCostoDeUnaLlamada -->
        <test-method signature="obtenerTipoDeTarifa()[pri:0, instance:entidadesTest.PlanPrepagoTest@7d04529c]" started-at="2020-11-16T01:52:37 BOT" name="obtenerTipoDeTarifa" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerTipoDeTarifa -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.PlanPrepagoTest@7d04529c]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- entidadesTest.PlanPrepagoTest -->
      <class name="entidadesTest.ClienteTest">
        <test-method signature="asignarNumeroTelefonicoYConseguirNumeroTelefonicoTest()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="asignarNumeroTelefonicoYConseguirNumeroTelefonicoTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asignarNumeroTelefonicoYConseguirNumeroTelefonicoTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="asignarTipoDePlanYConseguirTipoDePlanTest()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="asignarTipoDePlanYConseguirTipoDePlanTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asignarTipoDePlanYConseguirTipoDePlanTest -->
        <test-method signature="asignarPlanYConseguirPlanTest()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="asignarPlanYConseguirPlanTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asignarPlanYConseguirPlanTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conseguirCiTest()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="conseguirCiTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirCiTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conseguirNombreTest()[pri:0, instance:entidadesTest.ClienteTest@6f3e19b3]" started-at="2020-11-16T01:52:37 BOT" name="conseguirNombreTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirNombreTest -->
      </class> <!-- entidadesTest.ClienteTest -->
      <class name="repositoriosTest.ConnectionBDTest">
        <test-method signature="getUserAndPassException()[pri:0, instance:repositoriosTest.ConnectionBDTest@10c07b8d]" started-at="2020-11-16T01:52:37 BOT" name="getUserAndPassException" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserAndPassException -->
        <test-method is-config="true" signature="initGetUserAndPassException()[pri:0, instance:repositoriosTest.ConnectionBDTest@10c07b8d]" started-at="2020-11-16T01:52:37 BOT" name="initGetUserAndPassException" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initGetUserAndPassException -->
      </class> <!-- repositoriosTest.ConnectionBDTest -->
      <class name="casosDeUsoTest.PersistenciaFiltrosTest">
        <test-method is-config="true" signature="initPersistencia()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="initPersistencia" finished-at="2020-11-16T01:52:19 BOT" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistencia -->
        <test-method is-config="true" signature="initFiltroRegistros()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="initFiltroRegistros" finished-at="2020-11-16T01:52:19 BOT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFiltroRegistros -->
        <test-method signature="coincidenEnMesTest()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="coincidenEnMesTest" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coincidenEnMesTest -->
        <test-method signature="esNumeroInvalidoDeMesTest()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="esNumeroInvalidoDeMesTest" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- esNumeroInvalidoDeMesTest -->
        <test-method is-config="true" signature="initFiltroRegistros()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="initFiltroRegistros" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFiltroRegistros -->
        <test-method signature="filtrarRegistrosPorMesTest()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="filtrarRegistrosPorMesTest" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filtrarRegistrosPorMesTest -->
        <test-method is-config="true" signature="initFiltroRegistros()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="initFiltroRegistros" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFiltroRegistros -->
        <test-method is-config="true" signature="initFiltroRegistros()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="initFiltroRegistros" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFiltroRegistros -->
        <test-method signature="obtenerMesLiteralTest()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="obtenerMesLiteralTest" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerMesLiteralTest -->
        <test-method is-config="true" signature="initFiltroRegistros()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="initFiltroRegistros" finished-at="2020-11-16T01:52:19 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFiltroRegistros -->
        <test-method signature="sumarTotalDelMesTest()[pri:0, instance:casosDeUsoTest.PersistenciaFiltrosTest@44b194fe]" started-at="2020-11-16T01:52:19 BOT" name="sumarTotalDelMesTest" finished-at="2020-11-16T01:52:19 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumarTotalDelMesTest -->
      </class> <!-- casosDeUsoTest.PersistenciaFiltrosTest -->
      <class name="controladoresTest.ControladorPrincipalTarificadorTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:controladoresTest.ControladorPrincipalTarificadorTest@22e5f96e]" started-at="2020-11-16T01:52:19 BOT" name="beforeSuite" finished-at="2020-11-16T01:52:19 BOT" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:controladoresTest.ControladorPrincipalTarificadorTest@22e5f96e]" started-at="2020-11-16T01:52:36 BOT" name="beforeClass" finished-at="2020-11-16T01:52:36 BOT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="revisarDeBDClientesExistentes()[pri:0, instance:controladoresTest.ControladorPrincipalTarificadorTest@22e5f96e]" started-at="2020-11-16T01:52:36 BOT" name="revisarDeBDClientesExistentes" finished-at="2020-11-16T01:52:36 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revisarDeBDClientesExistentes -->
        <test-method signature="revisarDeBDClientesExistentesDespueDeGuardarUno()[pri:0, instance:controladoresTest.ControladorPrincipalTarificadorTest@22e5f96e]" started-at="2020-11-16T01:52:36 BOT" name="revisarDeBDClientesExistentesDespueDeGuardarUno" finished-at="2020-11-16T01:52:36 BOT" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revisarDeBDClientesExistentesDespueDeGuardarUno -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:controladoresTest.ControladorPrincipalTarificadorTest@22e5f96e]" started-at="2020-11-16T01:52:44 BOT" name="afterSuite" finished-at="2020-11-16T01:52:44 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- controladoresTest.ControladorPrincipalTarificadorTest -->
      <class name="controladoresTest.ControladorFacturacionTest">
        <test-method is-config="true" signature="initControlador()[pri:0, instance:controladoresTest.ControladorFacturacionTest@68880c21]" started-at="2020-11-16T01:52:35 BOT" name="initControlador" finished-at="2020-11-16T01:52:35 BOT" duration-ms="623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initControlador -->
        <test-method signature="devolverFacturaDeUnMes()[pri:0, instance:controladoresTest.ControladorFacturacionTest@68880c21]" started-at="2020-11-16T01:52:35 BOT" name="devolverFacturaDeUnMes" finished-at="2020-11-16T01:52:35 BOT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devolverFacturaDeUnMes -->
        <test-method signature="getFactura()[pri:0, instance:controladoresTest.ControladorFacturacionTest@68880c21]" started-at="2020-11-16T01:52:35 BOT" name="getFactura" finished-at="2020-11-16T01:52:35 BOT" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFactura -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:controladoresTest.ControladorFacturacionTest@68880c21]" started-at="2020-11-16T01:52:35 BOT" name="endTest" finished-at="2020-11-16T01:52:36 BOT" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- controladoresTest.ControladorFacturacionTest -->
      <class name="repositoriosTest.RepositorioCDRTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.RepositorioCDRTest@70c53dbe]" started-at="2020-11-16T01:52:42 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:42 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="registrarCDRyVaciarLosRegistrosTest()[pri:0, instance:repositoriosTest.RepositorioCDRTest@70c53dbe]" started-at="2020-11-16T01:52:42 BOT" name="registrarCDRyVaciarLosRegistrosTest" finished-at="2020-11-16T01:52:42 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrarCDRyVaciarLosRegistrosTest -->
        <test-method signature="registrarCDRyObtnerLosRegistrosNoTarificadosTest()[pri:0, instance:repositoriosTest.RepositorioCDRTest@70c53dbe]" started-at="2020-11-16T01:52:42 BOT" name="registrarCDRyObtnerLosRegistrosNoTarificadosTest" finished-at="2020-11-16T01:52:42 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrarCDRyObtnerLosRegistrosNoTarificadosTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:repositoriosTest.RepositorioCDRTest@70c53dbe]" started-at="2020-11-16T01:52:42 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:42 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- repositoriosTest.RepositorioCDRTest -->
      <class name="casosDeUsoTest.RegistroCDRTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:casosDeUsoTest.RegistroCDRTest@3b4d50b]" started-at="2020-11-16T01:52:27 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:27 BOT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="guardarTemporalmenteCDRs()[pri:0, instance:casosDeUsoTest.RegistroCDRTest@3b4d50b]" started-at="2020-11-16T01:52:27 BOT" name="guardarTemporalmenteCDRs" finished-at="2020-11-16T01:52:27 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guardarTemporalmenteCDRs -->
      </class> <!-- casosDeUsoTest.RegistroCDRTest -->
      <class name="casosDeUsoTest.PersistenciaSerializacionTest">
        <test-method is-config="true" signature="initPersistencia()[pri:0, instance:casosDeUsoTest.PersistenciaSerializacionTest@49122b8f]" started-at="2020-11-16T01:52:19 BOT" name="initPersistencia" finished-at="2020-11-16T01:52:19 BOT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistencia -->
        <test-method is-config="true" signature="initRegistros()[pri:0, instance:casosDeUsoTest.PersistenciaSerializacionTest@49122b8f]" started-at="2020-11-16T01:52:19 BOT" name="initRegistros" finished-at="2020-11-16T01:52:19 BOT" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistros -->
        <test-method signature="deserializar()[pri:0, instance:casosDeUsoTest.PersistenciaSerializacionTest@49122b8f]" started-at="2020-11-16T01:52:19 BOT" name="deserializar" finished-at="2020-11-16T01:52:19 BOT" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deserializar -->
      </class> <!-- casosDeUsoTest.PersistenciaSerializacionTest -->
      <class name="controladoresTest.ControladorCDRTest">
        <test-method is-config="true" signature="initControlador()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initControlador" finished-at="2020-11-16T01:52:33 BOT" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initControlador -->
        <test-method signature="cambiarModoDeConfiguracionArchivo()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="cambiarModoDeConfiguracionArchivo" finished-at="2020-11-16T01:52:33 BOT" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cambiarModoDeConfiguracionArchivo -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method signature="cambiarModoDeConfiguracionDB()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="cambiarModoDeConfiguracionDB" finished-at="2020-11-16T01:52:33 BOT" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cambiarModoDeConfiguracionDB -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method signature="configuracion()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="configuracion" finished-at="2020-11-16T01:52:33 BOT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configuracion -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method signature="devolverRegistrosNoTarificadosTest()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="devolverRegistrosNoTarificadosTest" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devolverRegistrosNoTarificadosTest -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method signature="devolverRegistrosTarificadosTest()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="devolverRegistrosTarificadosTest" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devolverRegistrosTarificadosTest -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method signature="getCDR()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="getCDR" finished-at="2020-11-16T01:52:33 BOT" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCDR -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method signature="getCDRRecuperados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="getCDRRecuperados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCDRRecuperados -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="initRegistrosNoTarificados()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="initRegistrosNoTarificados" finished-at="2020-11-16T01:52:33 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRegistrosNoTarificados -->
        <test-method signature="guardar()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="guardar" finished-at="2020-11-16T01:52:33 BOT" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guardar -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:33 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:controladoresTest.ControladorCDRTest@18da4dd]" started-at="2020-11-16T01:52:33 BOT" name="endTest" finished-at="2020-11-16T01:52:34 BOT" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- controladoresTest.ControladorCDRTest -->
      <class name="modelosTest.FacturaModeloTest">
        <test-method signature="mesTest()[pri:0, instance:modelosTest.FacturaModeloTest@2c7a8af2]" started-at="2020-11-16T01:52:37 BOT" name="mesTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mesTest -->
        <test-method is-config="true" signature="init()[pri:0, instance:modelosTest.FacturaModeloTest@2c7a8af2]" started-at="2020-11-16T01:52:37 BOT" name="init" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="init()[pri:0, instance:modelosTest.FacturaModeloTest@2c7a8af2]" started-at="2020-11-16T01:52:37 BOT" name="init" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="init()[pri:0, instance:modelosTest.FacturaModeloTest@2c7a8af2]" started-at="2020-11-16T01:52:37 BOT" name="init" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="montoMesTest()[pri:0, instance:modelosTest.FacturaModeloTest@2c7a8af2]" started-at="2020-11-16T01:52:37 BOT" name="montoMesTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- montoMesTest -->
        <test-method signature="numeroTelefonicoTest()[pri:0, instance:modelosTest.FacturaModeloTest@2c7a8af2]" started-at="2020-11-16T01:52:37 BOT" name="numeroTelefonicoTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numeroTelefonicoTest -->
      </class> <!-- modelosTest.FacturaModeloTest -->
      <class name="entidadesTest.UserTest">
        <test-method is-config="true" signature="init()[pri:0, instance:entidadesTest.UserTest@b16e202]" started-at="2020-11-16T01:52:37 BOT" name="init" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="userPasswordTest()[pri:0, instance:entidadesTest.UserTest@b16e202]" started-at="2020-11-16T01:52:37 BOT" name="userPasswordTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userPasswordTest -->
        <test-method signature="userNameTest()[pri:0, instance:entidadesTest.UserTest@b16e202]" started-at="2020-11-16T01:52:37 BOT" name="userNameTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userNameTest -->
      </class> <!-- entidadesTest.UserTest -->
      <class name="controladoresTest.ControladorRegistroClientesTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:36 BOT" name="beforeClass" finished-at="2020-11-16T01:52:36 BOT" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:36 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:36 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getRegistrosCargados()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:36 BOT" name="getRegistrosCargados" finished-at="2020-11-16T01:52:36 BOT" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRegistrosCargados -->
        <test-method signature="postApiSubmit()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:36 BOT" name="postApiSubmit" finished-at="2020-11-16T01:52:37 BOT" duration-ms="529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postApiSubmit -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:36 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:36 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="postApiSubmitSinArchivo()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:37 BOT" name="postApiSubmitSinArchivo" finished-at="2020-11-16T01:52:37 BOT" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postApiSubmitSinArchivo -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:controladoresTest.ControladorRegistroClientesTest@2dd2e270]" started-at="2020-11-16T01:52:37 BOT" name="afterClass" finished-at="2020-11-16T01:52:37 BOT" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- controladoresTest.ControladorRegistroClientesTest -->
      <class name="casosDeUsoTest.PersistenciaTest">
        <test-method is-config="true" signature="initPersistencia()[pri:0, instance:casosDeUsoTest.PersistenciaTest@3fe46690]" started-at="2020-11-16T01:52:19 BOT" name="initPersistencia" finished-at="2020-11-16T01:52:19 BOT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPersistencia -->
        <test-method is-config="true" signature="initBD()[pri:0, instance:casosDeUsoTest.PersistenciaTest@3fe46690]" started-at="2020-11-16T01:52:19 BOT" name="initBD" finished-at="2020-11-16T01:52:20 BOT" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBD -->
        <test-method signature="obtenerFacturaConClienteNoRegistrado()[pri:0, instance:casosDeUsoTest.PersistenciaTest@3fe46690]" started-at="2020-11-16T01:52:20 BOT" name="obtenerFacturaConClienteNoRegistrado" finished-at="2020-11-16T01:52:20 BOT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerFacturaConClienteNoRegistrado -->
        <test-method is-config="true" signature="tearBD()[pri:0, instance:casosDeUsoTest.PersistenciaTest@3fe46690]" started-at="2020-11-16T01:52:20 BOT" name="tearBD" finished-at="2020-11-16T01:52:21 BOT" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearBD -->
        <test-method is-config="true" signature="initBD()[pri:0, instance:casosDeUsoTest.PersistenciaTest@3fe46690]" started-at="2020-11-16T01:52:21 BOT" name="initBD" finished-at="2020-11-16T01:52:22 BOT" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBD -->
        <test-method signature="obtenerFacturaDelMesParaClienteTest()[pri:0, instance:casosDeUsoTest.PersistenciaTest@3fe46690]" started-at="2020-11-16T01:52:22 BOT" name="obtenerFacturaDelMesParaClienteTest" finished-at="2020-11-16T01:52:22 BOT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerFacturaDelMesParaClienteTest -->
        <test-method is-config="true" signature="tearBD()[pri:0, instance:casosDeUsoTest.PersistenciaTest@3fe46690]" started-at="2020-11-16T01:52:22 BOT" name="tearBD" finished-at="2020-11-16T01:52:22 BOT" duration-ms="425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearBD -->
      </class> <!-- casosDeUsoTest.PersistenciaTest -->
      <class name="controladoresTest.ControladorCDRSerializacionTest">
        <test-method is-config="true" signature="initControlador()[pri:0, instance:controladoresTest.ControladorCDRSerializacionTest@317e9c3c]" started-at="2020-11-16T01:52:32 BOT" name="initControlador" finished-at="2020-11-16T01:52:32 BOT" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initControlador -->
        <test-method is-config="true" signature="initGuardarRegistrosEnBD()[pri:0, instance:controladoresTest.ControladorCDRSerializacionTest@317e9c3c]" started-at="2020-11-16T01:52:32 BOT" name="initGuardarRegistrosEnBD" finished-at="2020-11-16T01:52:32 BOT" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initGuardarRegistrosEnBD -->
        <test-method signature="cdrGuardadoBDTest()[pri:0, instance:controladoresTest.ControladorCDRSerializacionTest@317e9c3c]" started-at="2020-11-16T01:52:32 BOT" name="cdrGuardadoBDTest" finished-at="2020-11-16T01:52:32 BOT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cdrGuardadoBDTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:controladoresTest.ControladorCDRSerializacionTest@317e9c3c]" started-at="2020-11-16T01:52:32 BOT" name="endTest" finished-at="2020-11-16T01:52:33 BOT" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="emptyRepositorio()[pri:0, instance:controladoresTest.ControladorCDRSerializacionTest@317e9c3c]" started-at="2020-11-16T01:52:32 BOT" name="emptyRepositorio" finished-at="2020-11-16T01:52:32 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyRepositorio -->
      </class> <!-- controladoresTest.ControladorCDRSerializacionTest -->
      <class name="modelosTest.CDRModeloTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="obtenerCostoDeLlamada()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerCostoDeLlamada" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerCostoDeLlamada -->
        <test-method signature="obtenerDuracionLlamada()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerDuracionLlamada" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerDuracionLlamada -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="obtenerFechaTarificacion()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerFechaTarificacion" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerFechaTarificacion -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="obtenerFecha()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerFecha" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerFecha -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="obtenerHora()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerHora" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerHora -->
        <test-method signature="obtenerHoraTarificacion()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerHoraTarificacion" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerHoraTarificacion -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="obtenerId()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerId" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerId -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="obtenerNumeroTelefonoDestino()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerNumeroTelefonoDestino" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerNumeroTelefonoDestino -->
        <test-method signature="obtenerNumeroTelefonoOrigen()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="obtenerNumeroTelefonoOrigen" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- obtenerNumeroTelefonoOrigen -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.CDRModeloTest@339a3670]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- modelosTest.CDRModeloTest -->
      <class name="modelosTest.ClienteModeloTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="beforeClass" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="conseguirCiTest()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="conseguirCiTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirCiTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conseguirFechaDeRegistroTest()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="conseguirFechaDeRegistroTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirFechaDeRegistroTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conseguirNombreTest()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="conseguirNombreTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirNombreTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conseguirNumeroTelefonicoTest()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="conseguirNumeroTelefonicoTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirNumeroTelefonicoTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="beforeMethod" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="conseguirNumerosDeAmigosTest()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="conseguirNumerosDeAmigosTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirNumerosDeAmigosTest -->
        <test-method signature="conseguirTipoDePlanTest()[pri:0, instance:modelosTest.ClienteModeloTest@6cd5122d]" started-at="2020-11-16T01:52:37 BOT" name="conseguirTipoDePlanTest" finished-at="2020-11-16T01:52:37 BOT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conseguirTipoDePlanTest -->
      </class> <!-- modelosTest.ClienteModeloTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
